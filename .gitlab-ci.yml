include:
  - component: "gitlab.kuleuven.be/to-be-continuous/docker/gitlab-ci-docker@6.0"
    # Ref: https://to-be-continuous.pages.gitlab.kuleuven.be/doc/ref/docker/
    inputs:
      # Docker file and image names for frontend and backend are defined in the
      # .docker-base job below as a matrix.
      release-extra-tags: "latest \\g<major>.\\g<minor>\\g<build>"
      prod-publish-strategy: "auto"
      registry-mirror: "https://dockerhub.rdmrepo.icts.kuleuven.be"
      healthcheck-disabled: true
      trivy-disabled: true
      hadolint-args: "--ignore DL3059"
  - component: "gitlab.kuleuven.be/to-be-continuous/helmfile/gitlab-ci-helmfile@3.2"
    # Ref: https://to-be-continuous.pages.gitlab.kuleuven.be/doc/ref/helmfile/
    inputs:
      scripts-dir: "./deploy"
      path: "./deploy/helmfile.yaml"
      base-app-name: "scenario-explorer"
      environment-url: "https://%{environment_name}.ae-01.cloud.set.kuleuven.be"
      lint-enabled: false
      review-enabled: true
      integ-enabled: true
      prod-enabled: true
      prod-deploy-strategy: "auto"
      review-namespace: "${CI_PROJECT_NAME}-${CI_PROJECT_ID}-review"
  - component: "gitlab.kuleuven.be/to-be-continuous/python/gitlab-ci-python@7.5"
    # Ref: https://to-be-continuous.pages.gitlab.kuleuven.be/doc/ref/python/
    inputs:
      image: "python:3.12.3-bookworm"
      project-dir: "./backend"
      build-system: "poetry"
      pylint-enabled: false
      pytest-enabled: false
      ruff-enabled: true
      mypy-enabled: true
      mypy-args: "--strict"
  - component: "gitlab.kuleuven.be/to-be-continuous/node/gitlab-ci-node@3.15"
    # Ref: https://to-be-continuous.pages.gitlab.kuleuven.be/doc/ref/node/
    inputs:
      image: "node:20-bookworm"
      manager: "pnpm"
      project-dir: "./frontend"
      build-args: "run build"
      lint-enabled: true
      audit-disabled: true
      outdated-disabled: true
      semgrep-disabled: true
  - component: "gitlab.kuleuven.be/to-be-continuous/playwright/gitlab-ci-playwright@1.4"
    # Ref: https://to-be-continuous.pages.gitlab.kuleuven.be/doc/ref/playwright/
    inputs:
      image: "mcr.microsoft.com/playwright:v1.45.1-jammy"
      project-dir: "./e2e"
      review-enabled: true

# secret variables
# (define the variables below in your GitLab group/project variables, if helmfile secrets are used)
# HELMFILE_PGP_PRIVATE_KEY_FILE: PGP Private key for decrypting helmfile secrets with SOPS (optional). Should be set as a File type variable.
# HELMFILE_PGP_PASSPHRASE: Passphrase for PGP private key (optional)

.docker-base:
  parallel:
    matrix:
      - DOCKER_FILE: "frontend/Dockerfile"
        DOCKER_SNAPSHOT_IMAGE: "$CI_REGISTRY_IMAGE/frontend/snapshot:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
        DOCKER_RELEASE_IMAGE: "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA"
      - DOCKER_FILE: "backend/Dockerfile"
        DOCKER_SNAPSHOT_IMAGE: "$CI_REGISTRY_IMAGE/backend/snapshot:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
        DOCKER_RELEASE_IMAGE: "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA"

node-typecheck:
  extends: .node-base
  stage: build
  script:
    - $NODE_MANAGER run typecheck
  rules:
    # on production or integration branch(es): auto & failing
    - !reference [.test-policy, rules]

playwright:
  artifacts:
    paths:
      - $PLAYWRIGHT_PROJECT_DIR/reports/playwright.*
      - $PLAYWRIGHT_PROJECT_DIR/test-results/**/*.png
  # Overwrite default rules to avoid running on production
  rules:
    # exclude tags
    - if: $CI_COMMIT_TAG
      when: never
    # on integration branch(es): auto & failing
    - if: "$CI_COMMIT_REF_NAME =~ $INTEG_REF"
    # disable if no review environment
    - if: '$REVIEW_ENABLED != "true"'
      when: never
    # on ADAPTIVE_PIPELINE_DISABLED: auto & failing
    - if: '$ADAPTIVE_PIPELINE_DISABLED == "true"'
    # early stage (dev branch, no MR): manual & non-failing
    - if: "$CI_MERGE_REQUEST_ID == null && $CI_OPEN_MERGE_REQUESTS == null"
      when: manual
      allow_failure: true
    # Draft MR: auto & non-failing
    - if: "$CI_MERGE_REQUEST_TITLE =~ /^Draft:.*/"
      allow_failure: true
    # else (Ready MR): auto & failing
    - when: on_success

# Redefine rules for the build job from the docker ci component
# to set the NODE_ENV build arg depending on the branch.
docker-kaniko-build:
  variables:
    DOCKER_BUILD_ARGS: "--build-arg VITE_NODE_ENV=review"
  rules:
    - if: '$DOCKER_BUILD_TOOL != "kaniko"'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ $PROD_REF || $CI_COMMIT_TAG'
      variables:
        DOCKER_BUILD_ARGS: "--build-arg VITE_NODE_ENV=production"
    - if: '$CI_COMMIT_REF_NAME =~ $INTEG_REF'
      variables:
        DOCKER_BUILD_ARGS: "--build-arg VITE_NODE_ENV=integration"
    - when: always
