import type { Attribute } from "@/lib/types";

function getRandomValue(min: number = 1000, max: number = 4000): number {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

export const XaxisAttributes = [
  "FR",
  "IT",
  "BE",
  "ES",
  "UK",
  "TU",
  "AB",
  "TY",
  "SH",
  "SW",
];

export const colors = [
  "#2d99b4",
  "#41aac4",
  "#4bb2cc",
  "#54bad4",
  "#62c9d0",
  "#63cbbf",
  "#57c2a1",
  "#6abb7d",
  "#91bf65",
  "#cdce59",
  "#ebcb59",
  "#fabc55",
  "#faa14e",
  "#f48d54",
  "#ed7859",
  "#ec676c",
  "#f76d8a",
  "#fb8cad",
  "#f498c4",
  "#ea94c9",
  "#e08fce",
  "#be93cf",
  "#9b96d0",
  "#7b9dcb",
  "#6d92c5",
  "#5f87bf",
];

export const ATTRIBUTE_OPTIONS_COLOR: Record<
  Exclude<Attribute, "stock building stock activity name">,
  Record<string, `#${string}`>
> = {
  "flow type": {
    "Energy in": "#5FB8CE",
    MATERIAL_IN: "#5BB89F",
    MATERIAL_LOSS_IN: "#56B770",
    MATERIAL_LOSS_OUT: "#ABD561",
    MATERIAL_OUT: "#FFF352",
    PROCESS: "#FCC74B",
    TRANSPORT_EOL: "#F99B43",
    TRANSPORT_TO_SITE: "#E34542",
  },
  "element class": {
    "Common walls": "#5FB8CE",
    "Electrical services": "#56B770",
    "External openings": "#ABD561",
    "External walls": "#FFF352",
    "Internal openings": "#FCC74B",
    "Internal walls": "#ECA10C",
    Roofs: "#E34542",
    Staircases: "#E4739E",
    "Storey floors": "#A131AF",
    Substructure: "#1B2CAF",
    "Technical services": "#3D72BF",
  },
  "Building subtype": {
    "Multi-family house": "#5FB8CE",
    Office: "#56B770",
    "Single-family house": "#87C9DA",
  },
  "Building type": {
    "Non-residential": "#5FB8CE",
    Residential: "#56B770",
  },
  country: {
    AT: "#C0B73E",
    BE: "#478A9B",
    BG: "#D3C944",
    CY: "#418955",
    CZ: "#E8DD4B",
    DE: "#4E98AA",
    DK: "#56A7BB",
    EE: "#CD8037",
    EL: "#47975D",
    ES: "#4EA666",
    FI: "#E28D3D",
    FR: "#5FB8CE",
    HR: "#56B770",
    HU: "#FFF352",
    IE: "#87C9DA",
    IT: "#73C489",
    LT: "#F99B43",
    LU: "#A5D6E3",
    LV: "#FAAC64",
    MT: "#8CCE9E",
    NL: "#BBE0EA",
    PL: "#FFF67D",
    PT: "#A0D6AF",
    RO: "#FFF99E",
    SE: "#FABB7F",
    SI: "#FFFAA7",
    SK: "#FFFAB6",
  },
  "material class": {
    Aluminium: "#3D72BF",
    Brick: "#5FB8CE",
    Ceramics: "#5BB89F",
    Cleaning: "#56B770",
    Concrete: "#ABD561",
    Copper: "#D5E45A",
    Electronics: "#FFF352",
    Energy: "#FCC74B",
    Glass: "#FBB147",
    Gypsum: "#F99B43",
    Insulation: "#EE7043",
    "Other Construction Materials": "#E34542",
    "Other Metal": "#EA4F6B",
    "Paint and Glue": "#E4739E",
    Plastic: "#C352A7",
    Process: "#A131AF",
    Sand: "#5E2FAF",
    Undefined: "#1B2CAF",
    Wood: "#2C4FB7",
  },
  region: {
    Continental: "#FFF352",
    Mediterranean: "#56B770",
    Nordic: "#F99B43",
    Oceanic: "#5FB8CE",
  },
  "building stock activity": {
    "Existing buildings": "#5FB8CE",
    "New buildings": "#56B770",
    Refurbishment: "#FFF352",
  },
  "Whole life cycle stages": {
    "Construction embodied carbon": "#5FB8CE",
    "Demolition embodied carbon": "#87C9DA",
    "Renovation embodied carbon": "#A5D6E3",
    "Use phase embodied carbon": "#BBE0EA",
    "Use phase operational carbon": "#56B770",
  },
} as const;

export const data = [
  {
    name: 2020,
    FR: getRandomValue(3000, 4000),
    IT: getRandomValue(3000, 4000),
    BE: getRandomValue(3000, 4000),
    ES: getRandomValue(3000, 4000),
    UK: getRandomValue(3000, 4000),
    TU: getRandomValue(3000, 4000),
    AB: getRandomValue(3000, 4000),
    TY: getRandomValue(3000, 4000),
    SH: getRandomValue(3000, 4000),
    SW: getRandomValue(3000, 4000),
  },
  {
    name: 2025,
    FR: getRandomValue(3000, 4000),
    IT: getRandomValue(3000, 4000),
    BE: getRandomValue(3000, 4000),
    ES: getRandomValue(3000, 4000),
    UK: getRandomValue(3000, 4000),
    TU: getRandomValue(3000, 4000),
    AB: getRandomValue(3000, 4000),
    TY: getRandomValue(3000, 4000),
    SH: getRandomValue(3000, 4000),
    SW: getRandomValue(3000, 4000),
  },
  {
    name: 2030,
    FR: getRandomValue(3000, 4000),
    IT: getRandomValue(3000, 4000),
    BE: getRandomValue(3000, 4000),
    ES: getRandomValue(3000, 4000),
    UK: getRandomValue(3000, 4000),
    TU: getRandomValue(3000, 4000),
    AB: getRandomValue(3000, 4000),
    TY: getRandomValue(3000, 4000),
    SH: getRandomValue(3000, 4000),
    SW: getRandomValue(3000, 4000),
  },
  {
    name: 2035,
    FR: getRandomValue(2500, 4000),
    IT: getRandomValue(2000, 3000),
    BE: getRandomValue(2000, 3000),
    ES: getRandomValue(3000, 4000),
    UK: getRandomValue(2000, 3000),
    TU: getRandomValue(3000, 4000),
    AB: getRandomValue(2000, 3000),
    TY: getRandomValue(2000, 3000),
    SH: getRandomValue(2000, 3000),
    SW: getRandomValue(2000, 3000),
  },
  {
    name: 2040,
    FR: getRandomValue(3000, 4000),
    IT: getRandomValue(2000, 2500),
    BE: getRandomValue(2000, 2500),
    ES: getRandomValue(2000, 2500),
    UK: getRandomValue(2000, 2500),
    TU: getRandomValue(2000, 2500),
    AB: getRandomValue(2000, 2500),
    TY: getRandomValue(2000, 2500),
    SH: getRandomValue(2000, 2500),
    SW: getRandomValue(2000, 2500),
  },
  {
    name: 2045,
    FR: getRandomValue(3000, 4000),
    IT: getRandomValue(1900, 2100),
    BE: getRandomValue(1900, 2100),
    ES: getRandomValue(1900, 2100),
    UK: getRandomValue(1900, 2100),
    TU: getRandomValue(1900, 2100),
    AB: getRandomValue(1900, 2100),
    TY: getRandomValue(1900, 2100),
    SH: getRandomValue(1900, 2100),
    SW: getRandomValue(1900, 2100),
  },
  {
    name: 2050,
    FR: getRandomValue(2500, 3900),
    IT: getRandomValue(1000, 1500),
    BE: getRandomValue(1000, 1500),
    ES: getRandomValue(1000, 1500),
    UK: getRandomValue(1000, 1500),
    TU: getRandomValue(1000, 1500),
    AB: getRandomValue(1000, 1500),
    TY: getRandomValue(1000, 1500),
    SH: getRandomValue(1000, 1500),
    SW: getRandomValue(1000, 1500),
  },
];
